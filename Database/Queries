--1 NEEDS WORK
SELECT 'Premier', custName, custPhone, custEmail FROM Premier
NATURAL JOIN Customer
UNION
SELECT 'Steady',custName, custPhone, custEmail FROM Steady
NATURAL JOIN Customer
UNION
SELECT 'Prospective',custName, custPhone, custEmail FROM Prospective
NATURAL JOIN Customer;
----------------------------------------------------------------------------------

--2
SELECT serviceDate, custName, cost 
FROM ServiceVisit 
NATURAL JOIN Vehicle 
NATURAL JOIN Customer;
----------------------------------------------------------------------------------

--3
--3
select c.custName,count(c.custName)*sv.cost as NetSpent from Customer c inner join Vehicle v on c.custID = v.custID inner join ServiceVisit sv
on v.VIN = sv.VIN where sv.serviceDate > '2015-01-01' AND sv.serviceDate < '2017-01-01' group by c.custName;
----------------------------------------------------------------------------------

--4
SELECT empName, COUNT(skillName) AS NumberOfSkills 
FROM MechanicSkill  me 
INNER JOIN Employee e 
ON me.empID = e.empID
GROUP BY e.empID HAVING COUNT(skillName) >= 3;
----------------------------------------------------------------------------------

--5
--a

--b

----------------------------------------------------------------------------------

--6
SELECT packageName, packageCost, itemName 
FROM Package 
NATURAL JOIN Item;
----------------------------------------------------------------------------------

--7
SELECT empName, (SELECT (SELECT COUNT(skillName) from MechanicSkill
GROUP BY empID ORDER BY COUNT(skillName) DESC LIMIT 1) - COUNT(MechanicSkill.empID))
AS "Skills Missing" FROM Employee
INNER JOIN MechanicSkill ON Employee.empID = MechanicSkill.empID
GROUP BY MechanicSkill.empID HAVING COUNT(MechanicSkill.empID) < 4;
----------------------------------------------------------------------------------

--8 DOESN'T NEET TO BE DONE :D

----------------------------------------------------------------------------------

--9

select custName, (ph.paid-p.fee) as 'difference' from Customer c inner join Premier p on c.custID=p.custID
inner join PaymentHistory ph on p.custID=ph.custID where ph.payDate < '2017-12-31' ORDER BY difference DESC;
----------------------------------------------------------------------------------

--10
--add new values
SELECT c.custID, custName,ph.estServiceDueDate, ph.estCost as 'total',count(c.custID)*ph.estCost as 'TotalPerCustomer' FROM Customer c
inner join SteadyEmail ph on c.custID=ph.custID 
where estServiceDueDate > '2016-12-31' AND estServiceDueDate < '2017-12-31' group by c.custID
ORDER BY TotalPerCustomer DESC;
----------------------------------------------------------------------------------

--11
SELECT custName, count(ph.paid) as'numTimes' FROM Customer c inner join Premier p on c.custID=p.custID 
inner join PaymentHistory ph on p.custID=ph.custID group by c.custID limit 3 ;
----------------------------------------------------------------------------------

--12

----------------------------------------------------------------------------------

--13
select empName, count(m.empID) AS numMentoring from Employee e INNER JOIN Mechanic m ON e.empID= m.empID
INNER JOIN Mentorship ON m.empID = Mentorship.mentorEmpID
GROUP BY  e.empName
ORDER BY numMentoring DESC
LIMIT 1;
----------------------------------------------------------------------------------

--14
select skillName, count(empID) as NumberOfEmployees from MechanicSkill group by skillName
having count(empID) = 1 limit 3;
----------------------------------------------------------------------------------

--15
SELECT empName AS 'Mechanic and Advisor' 
FROM Employee 
NATURAL JOIN Mechanic 
NATURAL JOIN ServiceAdvisor 
WHERE Mechanic.empID=ServiceAdvisor.empID;
----------------------------------------------------------------------------------

--16
select VIN,make,model,mileage,maintenanceInterval,v.packageName from Vehicle v inner join 
Package p on v.packageName = p.packageName;
----------------------------------------------------------------------------------

--17
SELECT itemName 
FROM Item
WHERE packageName IS NULL;
----------------------------------------------------------------------------------

--18
--a.
--Output mechanics that must mentor but have not 
SELECT empName, mustMentor, hasMentored
FROM Mechanic
NATURAL JOIN Employee
WHERE mustMentor = 1 AND hasMentored = 0;

--b.
--Output mechanics who needs to be mentored to level up in a skill
SELECT empName, skillName, skillLevel
FROM Employee
NATURAL JOIN Mechanic
NATURAL JOIN MechanicSkill
WHERE skillLevel < 5;

--c.
SELECT refferalDate, ExistingCustID, custName
FROM Prospective p
INNER JOIN Existing e
ON e.custID = p.ExistingCustID
INNER JOIN Customer c
ON c.custID = p.custID;

